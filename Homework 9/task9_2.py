# üìå–î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1. 
# üìå–ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä. 
# üìå–û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é —É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10]. 
# üìå–ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.

from typing import Callable
import random as rnd
from functools import wraps



def decor(func:Callable):
    
    @wraps(func)
    def wrapper(*args, **kwargs):
        a, b, *_ = args
        if a not in range(1, 101):
            print(f'–í–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ {a} –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω [1, 100]'
                  f'–ë—É–¥–µ–º –∏–≥—Ä–∞—Ç—å –ø–æ –º–æ–∏–º –ø—Ä–∞–≤–∏–ª–∞–º!')
            a = rnd.randint(1, 100)
        if b not in range(1, 11):
            print(f'–í–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ {b} –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω [1, 10]'
                  f'–ë—É–¥–µ–º –∏–≥—Ä–∞—Ç—å –ø–æ –º–æ–∏–º –ø—Ä–∞–≤–∏–ª–∞–º!')
            b = rnd.randint(1, 10)
        return func(a, b)

    return wrapper


@decor
def inner(a:int, b:int):
        print(f'–£ —Ç–µ–±—è {b} –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ!')
        while b:
            guess = int(input('–í–≤–µ–¥–∏ —á–∏—Å–ª–æ: '))
            if guess > a:
                print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ —á–µ–º {guess}')
            elif guess < a:
                print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ —á–µ–º {guess}')
            else:
                print(f'–¢—ã —É–≥–∞–¥–∞–ª! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ {a}!')
                break
            b -= 1
        else:
            print(f'–¢—ã –Ω–µ —É–≥–∞–¥–∞–ª! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ {a}!')

inner(202, 6)
















